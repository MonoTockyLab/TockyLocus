[{"path":"https://MonoTockyLab.github.io/TockyLocus/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/TockyLocus/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright 2024 Masahiro Ono  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://MonoTockyLab.github.io/TockyLocus/articles/Introduction.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Introduction to Tocky","text":"vignette introduces concept Tocky. Tocky short “Timer--cell-kinetics--activity,” inspired Japanese word “toki,” meaning “time.” serves comprehensive toolkit integrates experimental computational approaches analyze temporal dynamics cell differentiation activation vivo.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/TockyLocus/articles/Introduction.html","id":"the-use-of-fluorescent-timer-protein-for-investigating-cellular-dynamics","dir":"Articles","previous_headings":"2. Principles of Tocky","what":"2-1. The Use of Fluorescent Timer Protein for Investigating Cellular Dynamics","title":"Introduction to Tocky","text":"concept Tocky technology conceived created Dr. Masahiro Ono. measure time-dependent processes individual T cells vivo, Dr. Ono envisioned using substance capable encoding time information known kinetics. screening experiments, mCherry mutant, Fluorescent Timer protein Fast-FT, originally developed Verkhusha group Einstein (Subach et al. (2009)), emerged ideal candidate, particularly compatibility flow cytometry. Leveraging feature, Ono lab developed new Fluorescent Timer reporter transgenic mouse strains analyzing T cell activities differentiation vivo. new transgenic strains include Nr4a3 Fluorescent Timer reporter mice Nr4a3 gene, downstream T cell receptor signaling, Foxp3 gene, specific regulatory T cells. effectively analyze data generated Tocky mice, Dr. Ono developed data analytic concepts dedicated Fluorescent Timer data, using Trigonometric Transformation method analyzing Fluorescent Timer data, reported 2018 (Bending et al., 2018). Consequently, novel Fluorescent Timer systems analysis temporal changes molecular cellular activities designated Nr4a3-Tocky Foxp3-Tocky.  Fluorescent Timer protein undergoes spontaneous irreversible transition emission spectrum, shifting blue red fluorescence post-translation. experimental measurements fluorescence revealed half-life Timer Blue fluorescence approximately 4 hours, whereas half-life Timer Red fluorescence extends 120 hours (Bending et al., 2018).","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/articles/Introduction.html","id":"tocky-data-transformation","dir":"Articles","previous_headings":"2. Principles of Tocky","what":"2-2. Tocky Data Transformation","title":"Introduction to Tocky","text":"primary objective Tocky approach analyze time-related information captured profiles Timer-Blue Timer-Red fluorescence data individual cell level. optimally utilize temporal information single-cell analysis, introduced novel concept along appropriate algorithms. tools designed normalize transform Timer fluorescence data two key metrics: Timer Angle Timer Intensity. Timer Angle defined angle (degrees, ranging 0 90) measured Timer-Blue axis towards Timer-Red axis. Timer Intensity represents distance (norm) cell origin (Timer-Blue = Timer-Red = 0). Normalized trigonometric-transformed Timer fluorescence data offer opportunities analyze real-time transcriptional activities cumulative (historical) activities observed days leading experimental analysis cells, demonstrated previous reports (Bending, Martı́n, et al. (2018); Bending, Paduraru, et al. (2018)).","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/articles/Introduction.html","id":"the-tocky-locus-approach","dir":"Articles","previous_headings":"2. Principles of Tocky","what":"2-3 The Tocky Locus Approach","title":"Introduction to Tocky","text":"TockyLocus package offers quantitative methods data categorization approach using five Tocky loci: New, Persistent, Arrested, two transitional regions, New--Persistent-transitioning (NPt) Persistent--Arrested-transitioning (PAt), defined Timer Angle:  may wonder five loci used, instead numbers three nine. recent paper examined data categorization approach, elucidating effectiveness five-loci approach (Ono (2024)).","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/TockyLocus/articles/TockyLocusAnalysis.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to Tocky Locus Analysis","text":"Fluorescent Timer proteins uniquely change emission spectra time serve powerful tools monitoring dynamic processes within cells. recent efforts successfully implemented data preprocessing methods TockyPrep package. However, still challenging analyze Timer fluorescence dynamics apply quantitative statistical analysis methods. overcome challenges, TockyLocus package developed. R package provides quantitative analysis methods, statistical methods, visualization techniques dedicated Timer fluorescence data analysis.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/articles/TockyLocusAnalysis.html","id":"aim","dir":"Articles","previous_headings":"Introduction","what":"Aim","title":"Introduction to Tocky Locus Analysis","text":"aim TockyLocus package standardize quantitative analysis visualization techniques flow cytometric Fluorescent Timer data. focuses data categorization using Timer Angle data, represents temporal maturation dynamics Timer proteins.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/articles/TockyLocusAnalysis.html","id":"relationship-to-the-package-tockyprep","dir":"Articles","previous_headings":"Introduction","what":"Relationship to the package TockyPrep","title":"Introduction to Tocky Locus Analysis","text":"TockyPrep package facilitates data preprocessing flow cytometric Fluorescent Timer data. TockyLocus package utilizes preprocessed data apply advanced quantitative visualization methods.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/articles/TockyLocusAnalysis.html","id":"getting-started-with-tockylocus","dir":"Articles","previous_headings":"Introduction","what":"Getting Started with TockyLocus","title":"Introduction to Tocky Locus Analysis","text":"begin using TockyLocus, install TockyLocus TockyPrep packages GitHub:","code":"# Install TockyPrep and TockyLocus from GitHub devtools::install_github(\"MonoTockyLab/TockyPrep\") devtools::install_github(\"MonoTockyLab/TockyLocus\")"},{"path":"https://MonoTockyLab.github.io/TockyLocus/articles/TockyLocusAnalysis.html","id":"sample-workflow","dir":"Articles","previous_headings":"","what":"Sample Workflow","title":"Introduction to Tocky Locus Analysis","text":"section guides typical analysis workflow using TockyLocus process flow cytometric data cells expressing Fluorescent Timer proteins, covering data import, preprocessing application, basic visualization techniques.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/articles/TockyLocusAnalysis.html","id":"data-preprocessing-using-tockyprep","dir":"Articles","previous_headings":"Sample Workflow","what":"Data Preprocessing Using TockyPrep","title":"Introduction to Tocky Locus Analysis","text":"First, load necessary packages. Load example data included TockyLocus package follows: dataset derived Nr4a3 Tocky T-cells. Briefly, T-cells Nr4a3 Tocky T cells activated antigen stimulation using ova/ OT-II system, time course analysis performed (Bending et al. (2018)).","code":"library(TockyPrep) library(TockyLocus) # Example data load # Define the base path file_path <- system.file(\"extdata\", package = \"TockyLocus\")  # Define files negfile <- \"Timer_negative.csv\" samplefiles <- list.files(file_path, pattern = \"sample_\", full.names = FALSE) samplefiles <- setdiff(samplefiles, file.path(file_path, negfile))"},{"path":"https://MonoTockyLab.github.io/TockyLocus/articles/TockyLocusAnalysis.html","id":"execute-data-preprocessing-using-tockyprep","dir":"Articles","previous_headings":"Sample Workflow > Data Preprocessing Using TockyPrep","what":"Execute data preprocessing using TockyPrep:","title":"Introduction to Tocky Locus Analysis","text":"Define sample negative control files using prep_tocky function function timer_transform imports data also normalize transform Timer blue red fluorescence data. Check class transformed object: effectively visualize processed data, define sample grouping using function sample_definition. example file sampledefinition.csv provides standard form. Use read.csv create data.frame onject, can used input sample_definition. Alternatively, define sample grouping effective visualization using sample_definition function interactive = TRUE option. approach generate CSV file working directory. edit CSV file include sample grouping information group column. editing, follow prompts interactive session press RETURN upon completion. Visualize processed data density plot using function plotAngleDensity.  plotAngleDensity function offers preliminary insights dynamics Timer fluorescence. However, visualization method certain limitations discussed subsequent sections.","code":"# Preprocessing data prep <- prep_tocky(path = file_path, samplefile = samplefiles, negfile = negfile, interactive = FALSE) # Normalizing and transforming data x <- timer_transform(prep, blue_channel = 'Timer.Blue', red_channel = 'Timer.Red', select = FALSE, verbose = FALSE) class(x) ## [1] \"TockyPrepData\" ## attr(,\"package\") ## [1] \"TockyPrep\" sample_definition <- read.csv(file.path(file_path, 'sampledef.csv')) sample_definition <- as.data.frame(sample_definition) head(sample_definition) ##                 file group ## 1 sample_0hrs_R1.csv     0 ## 2 sample_0hrs_R2.csv     0 ## 3 sample_0hrs_R3.csv     0 ## 4 sample_4hrs_R1.csv     4 ## 5 sample_4hrs_R2.csv     4 ## 6 sample_4hrs_R3.csv     4 # Normalizing and transforming data  x <- sample_definition(x, sample_definition = sample_definition, interactive = FALSE) # Visualizing the results plotAngleDensity(x) ## Picking joint bandwidth of 1.9"},{"path":"https://MonoTockyLab.github.io/TockyLocus/articles/TockyLocusAnalysis.html","id":"tocky-locus-analysis","dir":"Articles","previous_headings":"Sample Workflow","what":"Tocky Locus Analysis","title":"Introduction to Tocky Locus Analysis","text":"Use TockyLocus function apply Tocky Locus approach data: TockyLocus function categorizes Timer Angle data five categories. visually represent categories, plotTockyLocusLegend function can used produce schematic figure five Tocky Locus categories.  quality checks Tocky Locus categorization, use plot_tocky_locus function. option n = 4 specifies number columns multi-panel plot.","code":"x <- TockyLocus(x) plotTockyLocusLegend(mar_par = c(2, 2, 4, 2))"},{"path":"https://MonoTockyLab.github.io/TockyLocus/articles/TockyLocusAnalysis.html","id":"plot_tocky_locus-the-qc-plot-for-tockylocus","dir":"Articles","previous_headings":"Sample Workflow","what":"plot_tocky_locus: The QC plot for TockyLocus","title":"Introduction to Tocky Locus Analysis","text":"Note sample 0 hours, taken antigen stimulation, shows pure red fluorescence. phenomenon due memory phenotype T-cells accumulated vivo OT-II Nr4a3 Tocky mice. memory phenotype T-cells considered self-reactive can develop OT-II Nr4a3 Tocky mice Rag genes sufficiently expressed (Ono Satou (2024)).","code":"plot_tocky_locus(x, n = 4) ## .."},{"path":"https://MonoTockyLab.github.io/TockyLocus/articles/TockyLocusAnalysis.html","id":"plottockylocus-the-plot-function-for-tockylocus","dir":"Articles","previous_headings":"Sample Workflow","what":"plotTockyLocus: The Plot Function for TockyLocus","title":"Introduction to Tocky Locus Analysis","text":"visualize Timer Angle dynamics per Tocky Locus, use plotTockyLocus function. default ‘faceted’ plot produces multiple panels different groups. Note percentage data based percentages within parent population, dataset, CD4+ T cells.  prefer use faceting, employ group_by = FALSE option generate Tocky Locus plot without multiple panels.","code":"plotTockyLocus(x, verbose = FALSE) plotTockyLocus(x, group_by = FALSE,  verbose = FALSE)"},{"path":"https://MonoTockyLab.github.io/TockyLocus/articles/TockyLocusAnalysis.html","id":"further-reading","dir":"Articles","previous_headings":"Sample Workflow","what":"Further Reading","title":"Introduction to Tocky Locus Analysis","text":"data now ready statistical testing downstream analysis. information detailed methodology, refer paper: Masahiro Ono (2024). TockyLocus: Quantitative Analysis Methods Flow Cytometric Fluorescent Timer Data. arXiv:2411.09386 [q-bio.QM]. Available :https://arxiv.org/abs/2411.09386.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/TockyLocus/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Masahiro Ono. Author, maintainer.           0000-0002-9284-7326","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Masahiro Ono (2024). TockyLocus: Quantitative Analysis Methods Flow Cytometric Fluorescent Timer Data. arXiv preprint arXiv:2411.09386 [q-bio.QM]. Available : https://arxiv.org/abs/2411.09386","code":"@Manual{,   title = {TockyLocus: Quantitative Analysis Methods for Flow Cytometric Fluorescent Timer Data},   author = {Masahiro Ono},   year = {2024},   note = {arXiv preprint arXiv:2411.04111 [q-bio.QM]},   url = {https://arxiv.org/abs/2411.09386}, }"},{"path":"https://MonoTockyLab.github.io/TockyLocus/index.html","id":"tockylocus-quantitative-analysis-methods-for-flow-cytometric-fluorescent-timer-data","dir":"","previous_headings":"","what":"Quantitative Method for Fluorescent Timer Reporters","title":"Quantitative Method for Fluorescent Timer Reporters","text":"Author: Dr. Masahiro OnoDate: 14 November 2024","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/TockyLocus/index.html","id":"the-potential-of-fluorescent-timer-proteins","dir":"","previous_headings":"Introduction: Fluorescent Timer as Experimental Tool and Development of the Tocky Concept","what":"The potential of Fluorescent Timer proteins","title":"Quantitative Method for Fluorescent Timer Reporters","text":"Fluorescent Timer proteins uniquely alter emission spectra time, making powerful tools monitoring dynamic cellular processes. proteins pivotal understanding intricate temporal dynamics cellular events. Despite potential, analyzing Timer fluorescence data flow cytometry often hampered variability instrument settings lack standardized data preprocessing methods.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/index.html","id":"tocky-a-breakthrough-in-fluorescent-timer-analysis","dir":"","previous_headings":"Introduction: Fluorescent Timer as Experimental Tool and Development of the Tocky Concept","what":"Tocky: A Breakthrough in Fluorescent Timer Analysis","title":"Quantitative Method for Fluorescent Timer Reporters","text":"significant advancement made 2018 Ono lab introduced Tocky, novel concept analyzing Fluorescent Timer data. approach encompasses data normalization transformation methods (see Introduction). However, computational implementation methodology yet available. breakthrough anslysis Fluorescent Timer data introduction polar coordinate, trigonometric transformation Timer fluorescence data, produces key variables: Timer Angle Timer Intensity.  However, effectively use approach, dedicated computational tool required normalize transform Timer fluorescence data. address challenges, recently developed TockyPrep package. R package provides comprehensive suite tools designed automate preprocessing, normalization, trigonometric transformation Timer fluorescence data. TockyPrep specifically addresses normalization immature mature Timer fluorescence critical step robust downstream analysis.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/TockyLocus/index.html","id":"aim-of-the-tockylocus-package","dir":"","previous_headings":"TockyLocus: The R Package for Quantitative Analysis of Fluorescent Timer Data","what":"Aim of the TockyLocus Package","title":"Quantitative Method for Fluorescent Timer Reporters","text":"aim TockyLocus package standardize quantitative analysis visualization techniques flow cytometric Fluorescent Timer data. focuses data categorization using Timer Angle data, represents temporal maturation dynamics Timer proteins.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/index.html","id":"features-of-the-tockylocus-package","dir":"","previous_headings":"TockyLocus: The R Package for Quantitative Analysis of Fluorescent Timer Data","what":"Features of the TockyLocus Package","title":"Quantitative Method for Fluorescent Timer Reporters","text":"Timer Data Categorization Method: feature enables quantitative analysis effective visualization Timer fluorescence dynamics. Precisely, Timer Angle data categorized five loci. allows quantitative analysis cell dynamics across Timer loci, enabling effective visualization statistical analysis.  Visualization Tools: package includes functions visualize Tocky Locus. Statistical Analysis Methods: Dedicated statistical methods implemented group-wise comparison Tocky Locus data.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/index.html","id":"availability","dir":"","previous_headings":"TockyLocus: The R Package for Quantitative Analysis of Fluorescent Timer Data > Features of the TockyLocus Package","what":"Availability","title":"Quantitative Method for Fluorescent Timer Reporters","text":"TockyLocus freely available distribution via GitHub: Link repository: TockyLocus GitHub","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/index.html","id":"getting-started-with-tockylocus","dir":"","previous_headings":"","what":"Getting Started with TockyLocus","title":"Quantitative Method for Fluorescent Timer Reporters","text":"begin using TockyLocus, install package GitHub using following command:","code":"# Install TockyLocus from GitHub devtools::install_github(\"MonoTockyLab/TockyLocus\")"},{"path":"https://MonoTockyLab.github.io/TockyLocus/index.html","id":"package-documentation","dir":"","previous_headings":"","what":"Package Documentation","title":"Quantitative Method for Fluorescent Timer Reporters","text":"TockyLocus package documentation available online: Website: https://MonoTockyLab.github.io/TockyLocus/ site includes function reference manuals vignettes (tutorials). addition HTML manual pages, PDF manual TockyLocus package available. can find installed package directory doc/, can access directly GitHub.","code":""},{"path":[]},{"path":"https://MonoTockyLab.github.io/TockyLocus/index.html","id":"copyright","dir":"","previous_headings":"Copyright, License, and Citation Guidelines","what":"Copyright","title":"Quantitative Method for Fluorescent Timer Reporters","text":"code original graphical content within TockyPrep package, including anime-like characters logos, copyrighted Masahiro Ono.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/index.html","id":"license","dir":"","previous_headings":"Copyright, License, and Citation Guidelines","what":"License","title":"Quantitative Method for Fluorescent Timer Reporters","text":"distribution modification governed Apache License 2.0, ensures users freedom use change software way respects original authorship. See LICENSE file information.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/index.html","id":"citing-tockylocus","dir":"","previous_headings":"Copyright, License, and Citation Guidelines","what":"Citing TockyLocus","title":"Quantitative Method for Fluorescent Timer Reporters","text":"use TockyLocus research, please cite: Masahiro Ono (2024). TockyLocus: Quantitative Analysis Methods Flow Cytometric Fluorescent Timer Data. arXiv:2411.09386 [q-bio.QM]. Available :https://arxiv.org/abs/2411.04111.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/index.html","id":"bibtex-entry","dir":"","previous_headings":"Copyright, License, and Citation Guidelines > Citing TockyLocus","what":"BibTeX Entry","title":"Quantitative Method for Fluorescent Timer Reporters","text":"","code":"@article{ono2024TockyLocus,     title={TockyLocus: Quantitative Analysis Methods for Flow Cytometric Fluorescent Timer Data},     author={Masahiro Ono},     year={2024},     journal={arXiv:2411.09386 [q-bio.QM]},     url={https://arxiv.org/abs/2411.09386}, }"},{"path":"https://MonoTockyLab.github.io/TockyLocus/index.html","id":"why-citation-is-important","dir":"","previous_headings":"Copyright, License, and Citation Guidelines > Citing TockyLocus","what":"Why Citation Is Important","title":"Quantitative Method for Fluorescent Timer Reporters","text":"Citing software ’ve used crucial acknowledging contributions ensuring reproducibility, critical scientific progress. Giving credit developers researchers contributed tools utilize respects acknowledges intellectual contributions. Proper citations allow researchers access tools versions, thus replicating verifying scientific results. Citations integral scientific ecosystem; help trace evolution ideas enable others build upon existing research. kindly remind users citing software important citing academic articles maintaining integrity scientific record.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/index.html","id":"further-resources","dir":"","previous_headings":"Copyright, License, and Citation Guidelines > Citing TockyLocus","what":"Further Resources","title":"Quantitative Method for Fluorescent Timer Reporters","text":"additional guidance citation practices maintaining research integrity, recommend visiting Committee Publication Ethics (COPE), offers valuable resources support adhering ethical practices scholarly publishing.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/index.html","id":"the-ono-lab-monotockylab","dir":"","previous_headings":"","what":"The Ono Lab (MonoTockyLab)","title":"Quantitative Method for Fluorescent Timer Reporters","text":"Masahiro Ono Lab (MonoTockyLab) offers innovative approaches analyzing omics flow cytometric data. lab particularly well-known development Timer--cell-kinetics--Activity (Tocky) integrated analysis immunological data using experiments computational analysis. Principal Investigator: Dr. Masahiro Ono, Reader Immunology Imperial College London. Dr. Ono creator developer Tocky. innovated transgenic computational technologies constitute Tocky. 2008, Dr. Ono initiated pioneering transition molecular immunology becoming Integrated Experimental Computational Immunologist, demonstrating visionary leadership pioneering spirit development application multidimensional analysis computational methods address experimental immunological problems. Tocky represents one fusion technologies Dr. Ono created developed. Tocky employs Fluorescent Timer protein analyze temporal dynamics cell activities development vivo. lab integrates molecular biology, immunology, computational analysis develop novel research tools, thereby enhancing understanding immune cell biology.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/index.html","id":"contact-and-more","dir":"","previous_headings":"","what":"Contact and More","title":"Quantitative Method for Fluorescent Timer Reporters","text":"Email:  Personal Homepage: GitHub: Twitter: BlueSky: Professional Homepage: Imperial College London - Masahiro Ono","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/GetStatsTockyLocus.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Statistical Tests for Tocky Locus Analysis — GetStatsTockyLocus","title":"Perform Statistical Tests for Tocky Locus Analysis — GetStatsTockyLocus","text":"function performs statistical tests Tocky Locus data, allowing different methods p-value adjustments.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/GetStatsTockyLocus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Statistical Tests for Tocky Locus Analysis — GetStatsTockyLocus","text":"","code":"GetStatsTockyLocus(   x,   percentTimer = FALSE,   p_adjust_method = \"BH\",   method = \"ASR\",   verbose = TRUE )"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/GetStatsTockyLocus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Statistical Tests for Tocky Locus Analysis — GetStatsTockyLocus","text":"x TockyPrepData object containing Tocky Locus data. percentTimer Logical. TRUE, percentages Timer-positive cells used; FALSE, percentages parent cells used. p_adjust_method Character string specifying method p-value adjustment multiple testing. Default 'BH' (Benjamini-Hochberg). methods available p.adjust, 'holm' 'bonferroni', can also used. method Character string specifying statistical test method use. Options : 'Wilcox' Mann-Whitney U test (Wilcoxon rank sum test) without data transformation. 'ASR' Arcsine Square Root Transformation, followed normality test t-test. 'Logit' Logit Transformation, followed normality test t-test. verbose Logical indicating whether print progress messages outputs. Default TRUE.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/GetStatsTockyLocus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Statistical Tests for Tocky Locus Analysis — GetStatsTockyLocus","text":"TockyPrepData object containing statistical outputs Tocky Locus Analysis, stored x@Tocky$TockyLocusStats.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/GetStatsTockyLocus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Statistical Tests for Tocky Locus Analysis — GetStatsTockyLocus","text":"","code":"if (FALSE) { # \\dontrun{ x <- GetStatsTockyLocus(x, method = 'ASR') } # }"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/Locus_to_colour.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Timer Angle Data into color code — Locus_to_colour","title":"Convert Timer Angle Data into color code — Locus_to_colour","text":"function assigns colors different ranges angle values, option use colorblind-friendly colors viridis palette.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/Locus_to_colour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Timer Angle Data into color code — Locus_to_colour","text":"","code":"Locus_to_colour(x, viridis = FALSE)"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/Locus_to_colour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Timer Angle Data into color code — Locus_to_colour","text":"x Angle numeric vector. viridis Logical, whether use viridis color palette.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/Locus_to_colour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Timer Angle Data into color code — Locus_to_colour","text":"character vector color code.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/Locus_to_colour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Timer Angle Data into color code — Locus_to_colour","text":"","code":"if (FALSE) { # \\dontrun{ col <- Locus_to_colour(x = c(0, 25, 45, 65, 90), viridis = TRUE) } # }"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/TockyLocus.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Tocky Locus using Timer Angle — TockyLocus","title":"Calculate Tocky Locus using Timer Angle — TockyLocus","text":"Calculate Tocky Locus using Timer Angle","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/TockyLocus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Tocky Locus using Timer Angle — TockyLocus","text":"","code":"TockyLocus(x)"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/TockyLocus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Tocky Locus using Timer Angle — TockyLocus","text":"x data.frame object TockyPrepData object","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/TockyLocus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Tocky Locus using Timer Angle — TockyLocus","text":"Input data frame object including Tocky Locus data.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/TockyLocus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Tocky Locus using Timer Angle — TockyLocus","text":"","code":"if (FALSE) { # \\dontrun{ x <- TockyLocus(x) } # }"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/TockyLocusLegend.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Tocky Locus Legend For a Plot — TockyLocusLegend","title":"Generate Tocky Locus Legend For a Plot — TockyLocusLegend","text":"Generate Tocky Locus Legend Plot","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/TockyLocusLegend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Tocky Locus Legend For a Plot — TockyLocusLegend","text":"","code":"TockyLocusLegend(legend = TRUE, cex = 1, viridis = FALSE)"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/TockyLocusLegend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Tocky Locus Legend For a Plot — TockyLocusLegend","text":"legend logical arguement. cex numeric value text size. viridis (Optional). TRUE, colour-blind friendly colour set used.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/TockyLocusLegend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Tocky Locus Legend For a Plot — TockyLocusLegend","text":"","code":"if (FALSE) { # \\dontrun{ TockyLocusLegend() } # }"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/angle_to_locus.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify Angle Data into Tocky Loci — angle_to_locus","title":"Classify Angle Data into Tocky Loci — angle_to_locus","text":"function classifies value vector angles specific loci categories based angle's value. categorizes angles 'New', 'NPt', 'Persistent', 'PAt', 'Arrested', NA Timer negative cells.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/angle_to_locus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify Angle Data into Tocky Loci — angle_to_locus","text":"","code":"angle_to_locus(angle)"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/angle_to_locus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify Angle Data into Tocky Loci — angle_to_locus","text":"angle numeric vector angles classify.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/angle_to_locus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify Angle Data into Tocky Loci — angle_to_locus","text":"Tocky Locus data character vector.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/angle_to_locus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classify Angle Data into Tocky Loci — angle_to_locus","text":"","code":"if (FALSE) { # \\dontrun{ angle <- c(0, 29, 45, 65, 90) locus <- angle_to_locus(angle) } # }"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/cellcount_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create cellcount table for calculating percentage parent — cellcount_table","title":"Create cellcount table for calculating percentage parent — cellcount_table","text":"Create cellcount table calculating percentage parent","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/cellcount_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create cellcount table for calculating percentage parent — cellcount_table","text":"","code":"cellcount_table(x, percentTimer = TRUE)"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/cellcount_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create cellcount table for calculating percentage parent — cellcount_table","text":"x data frame containing Timer Angle variable column name Angle. percentTimer logical value whether Percent Timer data produced. Default FALSE produces Percent Parent data.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/cellcount_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create cellcount table for calculating percentage parent — cellcount_table","text":"data frame cell number Tocky Locus. NA returned Timer negative cells.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/cellcount_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create cellcount table for calculating percentage parent — cellcount_table","text":"","code":"if (FALSE) { # \\dontrun{ cellcounttable <- cellcount_table(x, percentTimer = FALSE) } # }"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/locus_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate mean percentage for each locus using cellcount_table — locus_mean","title":"Calculate mean percentage for each locus using cellcount_table — locus_mean","text":"Calculate mean percentage locus using cellcount_table","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/locus_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate mean percentage for each locus using cellcount_table — locus_mean","text":"","code":"locus_mean(x, sampledef = sampledef)"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/locus_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate mean percentage for each locus using cellcount_table — locus_mean","text":"x TockyPrepData output cellcount_table sampledef sample_definition data frame","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/locus_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate mean percentage for each locus using cellcount_table — locus_mean","text":"summary table data frame.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/locus_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate mean percentage for each locus using cellcount_table — locus_mean","text":"","code":"if (FALSE) { # \\dontrun{ p <- locus_mean(x) } # }"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/plotAngleDensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Density of Angles by Group Using Ridge Plots — plotAngleDensity","title":"Plot Density of Angles by Group Using Ridge Plots — plotAngleDensity","text":"function takes TockyPrepData object, previously processed using timer_transform function, creates ridge plot showing density distribution angles group defined dataset.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/plotAngleDensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Density of Angles by Group Using Ridge Plots — plotAngleDensity","text":"","code":"plotAngleDensity(x, alpha = 0.3, group_order = NULL, scale = 2, legend = FALSE)"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/plotAngleDensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Density of Angles by Group Using Ridge Plots — plotAngleDensity","text":"x TockyPrepData object processed timer_transform function. alpha number 0 1 usedby ggridges. group_order Optional. character vector define order group scale scaling factor scale height ridgelines. Used ggridges. legend Logical. TRUE, legend included.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/plotAngleDensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Density of Angles by Group Using Ridge Plots — plotAngleDensity","text":"ggplot object showing density distribution angles group.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/plotAngleDensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Density of Angles by Group Using Ridge Plots — plotAngleDensity","text":"","code":"if (FALSE) { # \\dontrun{ plotAngleDensity(x) } # }"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/plotTockyLocus.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce scatter plots of percentages of cells in each Tocky Locus. — plotTockyLocus","title":"Produce scatter plots of percentages of cells in each Tocky Locus. — plotTockyLocus","text":"Produce scatter plots percentages cells Tocky Locus.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/plotTockyLocus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce scatter plots of percentages of cells in each Tocky Locus. — plotTockyLocus","text":"","code":"plotTockyLocus(   x,   percentTimer = FALSE,   group_order = NULL,   locus_colours = NULL,   group_colors = NULL,   group_by = TRUE,   p_adjust_method = \"fdr\",   ylim = NULL,   stats = TRUE,   verbose = TRUE )"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/plotTockyLocus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce scatter plots of percentages of cells in each Tocky Locus. — plotTockyLocus","text":"x TockyPrepData object percentTimer logical value whether Percent Timer data produced. Default FALSE produces Percent Parent data. group_order order groups (optional). locus_colours (optional) choose colours Tocky Loci. group_colors (optional) choose colours groups. group_by logical value whether different groups plotted different panels. p_adjust_method method p-value adjustment statistical tests. ylim (Optional) range y values displayed. stats logical value whether produce statistical outputs. effective two-group analysis. verbose Logical indicating whether print Tocky Locus stats. Default TRUE.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/plotTockyLocus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce scatter plots of percentages of cells in each Tocky Locus. — plotTockyLocus","text":"ggplot object","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/plotTockyLocus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce scatter plots of percentages of cells in each Tocky Locus. — plotTockyLocus","text":"","code":"if (FALSE) { # \\dontrun{ plotTockyLocus(x) } # }"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/plotTockyLocusLegend.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Coloured Tocky Locus Legend — plotTockyLocusLegend","title":"Plot Coloured Tocky Locus Legend — plotTockyLocusLegend","text":"Plot Coloured Tocky Locus Legend","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/plotTockyLocusLegend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Coloured Tocky Locus Legend — plotTockyLocusLegend","text":"","code":"plotTockyLocusLegend(mar_par = c(4, 4, 10, 4))"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/plotTockyLocusLegend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Coloured Tocky Locus Legend — plotTockyLocusLegend","text":"mar_par parameters function mar. default c(4, 4, 10, 4)","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/plotTockyLocusLegend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Coloured Tocky Locus Legend — plotTockyLocusLegend","text":"plot colored rectangles labels.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/plotTockyLocusLegend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Coloured Tocky Locus Legend — plotTockyLocusLegend","text":"","code":"if (FALSE) { # \\dontrun{   plotTockyLocusLegend() } # }"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/plot_tocky_locus.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate basic QC plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) — plot_tocky_locus","title":"Generate basic QC plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) — plot_tocky_locus","text":"function creates quick control plots TockyPrepData object analyzing fluorescence changes time cellular activities.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/plot_tocky_locus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate basic QC plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) — plot_tocky_locus","text":"","code":"plot_tocky_locus(   x,   file = \"PlotTockyLocus\",   n = 3,   max_cell_number = 20000,   viridis = FALSE,   interactive = FALSE )"},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/plot_tocky_locus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate basic QC plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) — plot_tocky_locus","text":"x TockyPrepData object produced function prep_tocky. file name output file. n number plots per row column output grid. max_cell_number maximum number cells displayed per panel. viridis (Optional). TRUE, colour-blind friendly colour set used. interactive (Optional). TRUE, interactive session used trim plot area.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/plot_tocky_locus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate basic QC plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) — plot_tocky_locus","text":"unchanged TockyPrepData object, primarily consistency pipeline usage.","code":""},{"path":"https://MonoTockyLab.github.io/TockyLocus/reference/plot_tocky_locus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate basic QC plots for Tocky data (Timer-Blue vs Timer-Red 2d plots) — plot_tocky_locus","text":"","code":"if (FALSE) { # \\dontrun{ plot_tocky_locus(data) } # }"}]
